import logging

import telebot
from django.db.models.signals import post_save
from django.dispatch import receiver
from django.utils.crypto import get_random_string
from telebot import types
from django.conf import settings
from proweb_bot.models import CustomUser, AdminUser
from proweb_bot.translations import translations

bot = telebot.TeleBot(settings.TG_BOT_TOKEN)

logging.basicConfig(level=logging.INFO)


@bot.message_handler(commands=['start'])
def start(message):
    random_password = get_random_string(10)

    user, created = CustomUser.objects.get_or_create(
        username_tg=message.from_user.username,
        tg_id=message.chat.id,
        defaults={'password': random_password, 'name_tg': message.from_user.first_name}
    )

    if created:
        user.set_password(random_password)
        user.save()
        logging.info(f"–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username_tg} —Å –ø–∞—Ä–æ–ª–µ–º {random_password}")
    else:
        logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username_tg} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")

    # –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    btn_en = types.KeyboardButton(text="–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üá∑üá∫")
    btn_ru = types.KeyboardButton(text="O'zbek tili üá∫üáø")
    markup.add(btn_en, btn_ru)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫/Tilni tanlang', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text in ["–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üá∑üá∫", "O'zbek tili üá∫üáø"])
def choose_language(message):
    user = CustomUser.objects.get(username_tg=message.from_user.username)

    if message.text == "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫ üá∑üá∫":
        user.language = 'ru'
    elif message.text == "O'zbek tili üá∫üáø":
        user.language = 'uz'

    user.save()

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    bot.send_message(message.chat.id, translations[user.language]['btn_send_phone'])

    markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    button_phone = types.KeyboardButton(text=translations[user.language]['btn_send_phone'], request_contact=True)
    markup.add(button_phone)
    bot.send_message(message.chat.id, translations[user.language]['btn_send_phone'], reply_markup=markup)


@bot.message_handler(content_types=['contact'])
def handle_contact(message):
    if message.contact:
        try:
            user = CustomUser.objects.get(username_tg=message.from_user.username)
            user.phone_tg = message.contact.phone_number
            user.save()
            bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
            logging.info(f"–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username_tg}")
        except CustomUser.DoesNotExist:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            logging.error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.")


@receiver(post_save, sender=CustomUser)
def create_admin_user(sender, instance, created, **kwargs):
    if instance.is_admin:
        AdminUser.objects.create(user=instance, telegram_id=instance.username_tg)
        bot.send_message(instance.tg_id, translations[instance.language]['text_admin_notification'])
    # else:
    #     # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–Ω—è—Ç
    #     AdminUser.objects.filter(user=instance).delete()
    #     print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {instance.username} –±–æ–ª—å—à–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")


def start_bot():
    bot.infinity_polling()
